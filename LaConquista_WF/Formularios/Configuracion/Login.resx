<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>